// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: patchwork.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from patchwork.proto</summary>
public static partial class PatchworkReflection {

  #region Descriptor
  /// <summary>File descriptor for patchwork.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PatchworkReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9wYXRjaHdvcmsucHJvdG8iFQoTU3RhdGljQ29uZmlnUmVxdWVzdCIsChFT",
          "dGF0aWNDb25maWdSZXBseRIXCg9vYnNlcnZhdGlvblNpemUYASABKAUiIAoJ",
          "R2FtZVN0YXRlEhMKC29ic2VydmF0aW9uGAEgAygCIiwKD0V2YWx1YXRlUmVx",
          "dWVzdBIZCgVzdGF0ZRgBIAMoCzIKLkdhbWVTdGF0ZSIxCgpFdmFsdWF0aW9u",
          "Eg8KB3dpblJhdGUYASABKAISEgoKbW92ZVJhdGluZxgCIAMoAiIxCg1FdmFs",
          "dWF0ZVJlcGx5EiAKC2V2YWx1YXRpb25zGAEgAygLMgsuRXZhbHVhdGlvbiJL",
          "CgtUcmFpblNhbXBsZRIZCgVzdGF0ZRgBIAEoCzIKLkdhbWVTdGF0ZRINCgVp",
          "c1dpbhgCIAEoCBISCgptb3ZlUmF0aW5nGAMgAygCIi0KDFRyYWluUmVxdWVz",
          "dBIdCgdzYW1wbGVzGAEgAygLMgwuVHJhaW5TYW1wbGUiDAoKVHJhaW5SZXBs",
          "eTKnAQoPUGF0Y2h3b3JrU2VydmVyEj0KD0dldFN0YXRpY0NvbmZpZxIULlN0",
          "YXRpY0NvbmZpZ1JlcXVlc3QaEi5TdGF0aWNDb25maWdSZXBseSIAEi4KCEV2",
          "YWx1YXRlEhAuRXZhbHVhdGVSZXF1ZXN0Gg4uRXZhbHVhdGVSZXBseSIAEiUK",
          "BVRyYWluEg0uVHJhaW5SZXF1ZXN0GgsuVHJhaW5SZXBseSIAYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::StaticConfigRequest), global::StaticConfigRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StaticConfigReply), global::StaticConfigReply.Parser, new[]{ "ObservationSize" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameState), global::GameState.Parser, new[]{ "Observation" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EvaluateRequest), global::EvaluateRequest.Parser, new[]{ "State" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Evaluation), global::Evaluation.Parser, new[]{ "WinRate", "MoveRating" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EvaluateReply), global::EvaluateReply.Parser, new[]{ "Evaluations" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TrainSample), global::TrainSample.Parser, new[]{ "State", "IsWin", "MoveRating" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TrainRequest), global::TrainRequest.Parser, new[]{ "Samples" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TrainReply), global::TrainReply.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class StaticConfigRequest : pb::IMessage<StaticConfigRequest> {
  private static readonly pb::MessageParser<StaticConfigRequest> _parser = new pb::MessageParser<StaticConfigRequest>(() => new StaticConfigRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StaticConfigRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticConfigRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticConfigRequest(StaticConfigRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticConfigRequest Clone() {
    return new StaticConfigRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StaticConfigRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StaticConfigRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StaticConfigRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class StaticConfigReply : pb::IMessage<StaticConfigReply> {
  private static readonly pb::MessageParser<StaticConfigReply> _parser = new pb::MessageParser<StaticConfigReply>(() => new StaticConfigReply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StaticConfigReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticConfigReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticConfigReply(StaticConfigReply other) : this() {
    observationSize_ = other.observationSize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticConfigReply Clone() {
    return new StaticConfigReply(this);
  }

  /// <summary>Field number for the "observationSize" field.</summary>
  public const int ObservationSizeFieldNumber = 1;
  private int observationSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ObservationSize {
    get { return observationSize_; }
    set {
      observationSize_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StaticConfigReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StaticConfigReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ObservationSize != other.ObservationSize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ObservationSize != 0) hash ^= ObservationSize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ObservationSize != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ObservationSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ObservationSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObservationSize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StaticConfigReply other) {
    if (other == null) {
      return;
    }
    if (other.ObservationSize != 0) {
      ObservationSize = other.ObservationSize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ObservationSize = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GameState : pb::IMessage<GameState> {
  private static readonly pb::MessageParser<GameState> _parser = new pb::MessageParser<GameState>(() => new GameState());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameState(GameState other) : this() {
    observation_ = other.observation_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameState Clone() {
    return new GameState(this);
  }

  /// <summary>Field number for the "observation" field.</summary>
  public const int ObservationFieldNumber = 1;
  private static readonly pb::FieldCodec<float> _repeated_observation_codec
      = pb::FieldCodec.ForFloat(10);
  private readonly pbc::RepeatedField<float> observation_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> Observation {
    get { return observation_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!observation_.Equals(other.observation_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= observation_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    observation_.WriteTo(output, _repeated_observation_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += observation_.CalculateSize(_repeated_observation_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameState other) {
    if (other == null) {
      return;
    }
    observation_.Add(other.observation_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          observation_.AddEntriesFrom(input, _repeated_observation_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class EvaluateRequest : pb::IMessage<EvaluateRequest> {
  private static readonly pb::MessageParser<EvaluateRequest> _parser = new pb::MessageParser<EvaluateRequest>(() => new EvaluateRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EvaluateRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EvaluateRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EvaluateRequest(EvaluateRequest other) : this() {
    state_ = other.state_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EvaluateRequest Clone() {
    return new EvaluateRequest(this);
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GameState> _repeated_state_codec
      = pb::FieldCodec.ForMessage(10, global::GameState.Parser);
  private readonly pbc::RepeatedField<global::GameState> state_ = new pbc::RepeatedField<global::GameState>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GameState> State {
    get { return state_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EvaluateRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EvaluateRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!state_.Equals(other.state_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= state_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    state_.WriteTo(output, _repeated_state_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += state_.CalculateSize(_repeated_state_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EvaluateRequest other) {
    if (other == null) {
      return;
    }
    state_.Add(other.state_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          state_.AddEntriesFrom(input, _repeated_state_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class Evaluation : pb::IMessage<Evaluation> {
  private static readonly pb::MessageParser<Evaluation> _parser = new pb::MessageParser<Evaluation>(() => new Evaluation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Evaluation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Evaluation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Evaluation(Evaluation other) : this() {
    winRate_ = other.winRate_;
    moveRating_ = other.moveRating_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Evaluation Clone() {
    return new Evaluation(this);
  }

  /// <summary>Field number for the "winRate" field.</summary>
  public const int WinRateFieldNumber = 1;
  private float winRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float WinRate {
    get { return winRate_; }
    set {
      winRate_ = value;
    }
  }

  /// <summary>Field number for the "moveRating" field.</summary>
  public const int MoveRatingFieldNumber = 2;
  private static readonly pb::FieldCodec<float> _repeated_moveRating_codec
      = pb::FieldCodec.ForFloat(18);
  private readonly pbc::RepeatedField<float> moveRating_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> MoveRating {
    get { return moveRating_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Evaluation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Evaluation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WinRate, other.WinRate)) return false;
    if(!moveRating_.Equals(other.moveRating_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (WinRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WinRate);
    hash ^= moveRating_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (WinRate != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(WinRate);
    }
    moveRating_.WriteTo(output, _repeated_moveRating_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (WinRate != 0F) {
      size += 1 + 4;
    }
    size += moveRating_.CalculateSize(_repeated_moveRating_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Evaluation other) {
    if (other == null) {
      return;
    }
    if (other.WinRate != 0F) {
      WinRate = other.WinRate;
    }
    moveRating_.Add(other.moveRating_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          WinRate = input.ReadFloat();
          break;
        }
        case 18:
        case 21: {
          moveRating_.AddEntriesFrom(input, _repeated_moveRating_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class EvaluateReply : pb::IMessage<EvaluateReply> {
  private static readonly pb::MessageParser<EvaluateReply> _parser = new pb::MessageParser<EvaluateReply>(() => new EvaluateReply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EvaluateReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EvaluateReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EvaluateReply(EvaluateReply other) : this() {
    evaluations_ = other.evaluations_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EvaluateReply Clone() {
    return new EvaluateReply(this);
  }

  /// <summary>Field number for the "evaluations" field.</summary>
  public const int EvaluationsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Evaluation> _repeated_evaluations_codec
      = pb::FieldCodec.ForMessage(10, global::Evaluation.Parser);
  private readonly pbc::RepeatedField<global::Evaluation> evaluations_ = new pbc::RepeatedField<global::Evaluation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Evaluation> Evaluations {
    get { return evaluations_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EvaluateReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EvaluateReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!evaluations_.Equals(other.evaluations_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= evaluations_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    evaluations_.WriteTo(output, _repeated_evaluations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += evaluations_.CalculateSize(_repeated_evaluations_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EvaluateReply other) {
    if (other == null) {
      return;
    }
    evaluations_.Add(other.evaluations_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          evaluations_.AddEntriesFrom(input, _repeated_evaluations_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class TrainSample : pb::IMessage<TrainSample> {
  private static readonly pb::MessageParser<TrainSample> _parser = new pb::MessageParser<TrainSample>(() => new TrainSample());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TrainSample> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainSample() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainSample(TrainSample other) : this() {
    State = other.state_ != null ? other.State.Clone() : null;
    isWin_ = other.isWin_;
    moveRating_ = other.moveRating_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainSample Clone() {
    return new TrainSample(this);
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 1;
  private global::GameState state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "isWin" field.</summary>
  public const int IsWinFieldNumber = 2;
  private bool isWin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsWin {
    get { return isWin_; }
    set {
      isWin_ = value;
    }
  }

  /// <summary>Field number for the "moveRating" field.</summary>
  public const int MoveRatingFieldNumber = 3;
  private static readonly pb::FieldCodec<float> _repeated_moveRating_codec
      = pb::FieldCodec.ForFloat(26);
  private readonly pbc::RepeatedField<float> moveRating_ = new pbc::RepeatedField<float>();
  /// <summary>
  ///EvaluateReply recommendation = 2;
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> MoveRating {
    get { return moveRating_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TrainSample);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TrainSample other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(State, other.State)) return false;
    if (IsWin != other.IsWin) return false;
    if(!moveRating_.Equals(other.moveRating_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (state_ != null) hash ^= State.GetHashCode();
    if (IsWin != false) hash ^= IsWin.GetHashCode();
    hash ^= moveRating_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (state_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(State);
    }
    if (IsWin != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsWin);
    }
    moveRating_.WriteTo(output, _repeated_moveRating_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (state_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
    }
    if (IsWin != false) {
      size += 1 + 1;
    }
    size += moveRating_.CalculateSize(_repeated_moveRating_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TrainSample other) {
    if (other == null) {
      return;
    }
    if (other.state_ != null) {
      if (state_ == null) {
        state_ = new global::GameState();
      }
      State.MergeFrom(other.State);
    }
    if (other.IsWin != false) {
      IsWin = other.IsWin;
    }
    moveRating_.Add(other.moveRating_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (state_ == null) {
            state_ = new global::GameState();
          }
          input.ReadMessage(state_);
          break;
        }
        case 16: {
          IsWin = input.ReadBool();
          break;
        }
        case 26:
        case 29: {
          moveRating_.AddEntriesFrom(input, _repeated_moveRating_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class TrainRequest : pb::IMessage<TrainRequest> {
  private static readonly pb::MessageParser<TrainRequest> _parser = new pb::MessageParser<TrainRequest>(() => new TrainRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TrainRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainRequest(TrainRequest other) : this() {
    samples_ = other.samples_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainRequest Clone() {
    return new TrainRequest(this);
  }

  /// <summary>Field number for the "samples" field.</summary>
  public const int SamplesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::TrainSample> _repeated_samples_codec
      = pb::FieldCodec.ForMessage(10, global::TrainSample.Parser);
  private readonly pbc::RepeatedField<global::TrainSample> samples_ = new pbc::RepeatedField<global::TrainSample>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::TrainSample> Samples {
    get { return samples_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TrainRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TrainRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!samples_.Equals(other.samples_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= samples_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    samples_.WriteTo(output, _repeated_samples_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += samples_.CalculateSize(_repeated_samples_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TrainRequest other) {
    if (other == null) {
      return;
    }
    samples_.Add(other.samples_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          samples_.AddEntriesFrom(input, _repeated_samples_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class TrainReply : pb::IMessage<TrainReply> {
  private static readonly pb::MessageParser<TrainReply> _parser = new pb::MessageParser<TrainReply>(() => new TrainReply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TrainReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PatchworkReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainReply(TrainReply other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TrainReply Clone() {
    return new TrainReply(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TrainReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TrainReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TrainReply other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
